name: Act on release created

on:
  push:
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.0.

permissions:
  contents: write

jobs:
  build_wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.10'

      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/


  publish-to-pypi:
    name: >-
      Publish Python 🐍  distribution 📦  to PyPI
    needs:
      - build_wheel
      - bazel_build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/rockset-stacky
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦  to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  bazel_build:
    name: bazel build linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.20.0'
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.10'
      - run: curl -L -o bazelisk https://github.com/bazelbuild/bazelisk/releases/download/v1.19.0/bazelisk-linux-amd64
      - run: chmod a+x bazelisk
      - run: ln -s bazelisk bazel
      - run: pip install xar
      - run: sudo apt-get install squashfs-tools
      - id: bazel_build
        run: bazel build //:stacky.xar && bazel build //:stacky --build_python_zip
      - name: Persist build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stacky_bazel
          path: |
            bazel-bin/stacky.xar
            bazel-bin/stacky

  github_release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
      - name: Download all the bazel
        uses: actions/download-artifact@v4
        with:
          name: stacky_bazel
          path: dist/
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - run: sha256sum dist/*.whl >dist/$(ls -1 dist/*whl |sed 's@.*/@@').sha256
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
            draft: true
            generate_release_notes: true
            files: |
              ./dist/*.tar.gz
              ./dist/*.whl
              ./dist/*.whl.sha256
              ./dist/stacky
              ./dist/stacky.xar
